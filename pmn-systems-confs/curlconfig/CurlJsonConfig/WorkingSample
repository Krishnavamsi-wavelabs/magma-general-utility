1.
Curl Command 
===========================================================================

curl --libcurl subsadd.c -k -X 'POST'  'https://192.168.90.20:18080/oms-service/webapi/apiservice/ue_provision/ue_config/ue_config?rowData=%7B%0A%20%20%22supi%22%3A%20%22001011234567534%22%0A%7D' -H 'accept: application/json'  -H 'apiInvokerId: 8meZD'  -H 'Content-Type: multipart/form-data'  -F 'inFile=@ue-add.json;type=application/json'


2.
C Code
===========================================================================
/********* Sample code generated by the curl command line tool **********
 * All curl_easy_setopt() options are documented at:
 * http://curl.haxx.se/libcurl/c/curl_easy_setopt.html
 ************************************************************************/
#include <curl/curl.h>

int main(int argc, char *argv[])
{
  CURLcode ret;
  CURL *hnd;
  struct curl_httppost *post1;
  struct curl_httppost *postend;
  struct curl_slist *slist1;

  post1 = NULL;
  postend = NULL;
  curl_formadd(&post1, &postend,
               CURLFORM_COPYNAME, "inFile",
               CURLFORM_FILE, "ue-add.json",
               CURLFORM_CONTENTTYPE, "application/json",
               CURLFORM_END);
  slist1 = NULL;
  slist1 = curl_slist_append(slist1, "accept: application/json");
  slist1 = curl_slist_append(slist1, "apiInvokerId: 8meZD");
  slist1 = curl_slist_append(slist1, "Content-Type: multipart/form-data");

  hnd = curl_easy_init();
  curl_easy_setopt(hnd, CURLOPT_URL, "https://192.168.90.20:18080/oms-service/webapi/apiservice/ue_provision/ue_config/ue_config?rowData=%7B%0A%20%20%22supi%22%3A%20%22001011234567534%22%0A%7D");
  curl_easy_setopt(hnd, CURLOPT_NOPROGRESS, 1L);
  curl_easy_setopt(hnd, CURLOPT_HTTPPOST, post1);
  curl_easy_setopt(hnd, CURLOPT_USERAGENT, "curl/7.29.0");
  curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, slist1);
  curl_easy_setopt(hnd, CURLOPT_MAXREDIRS, 50L);
  curl_easy_setopt(hnd, CURLOPT_SSL_VERIFYPEER, 0L);
  curl_easy_setopt(hnd, CURLOPT_SSL_VERIFYHOST, 0L);
  curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");
  curl_easy_setopt(hnd, CURLOPT_TCP_KEEPALIVE, 1L);

  /* Here is a list of options the curl code used that cannot get generated
     as source easily. You may select to either not use them or implement
     them yourself.

  CURLOPT_WRITEDATA set to a objectpointer
  CURLOPT_WRITEFUNCTION set to a functionpointer
  CURLOPT_READDATA set to a objectpointer
  CURLOPT_READFUNCTION set to a functionpointer
  CURLOPT_SEEKDATA set to a objectpointer
  CURLOPT_SEEKFUNCTION set to a functionpointer
  CURLOPT_ERRORBUFFER set to a objectpointer
  CURLOPT_STDERR set to a objectpointer
  CURLOPT_HEADERFUNCTION set to a functionpointer
  CURLOPT_HEADERDATA set to a objectpointer

  */

  ret = curl_easy_perform(hnd);

  curl_easy_cleanup(hnd);
  hnd = NULL;
  curl_formfree(post1);
  post1 = NULL;
  curl_slist_free_all(slist1);
  slist1 = NULL;

  return (int)ret;
}
/**** End of sample code ****/
